version: '3'

interval: 500ms

tasks:

  template:
    dir: '{{.USER_WORKING_DIR}}'
    desc: Generate template from source code
    cmds:
      - go run github.com/maddalax/htmgo/framework/tooling/downloadtemplate@latest -out my-app

  setup:
    dir: '{{.USER_WORKING_DIR}}'
    desc: Setup the project
    cmds:
      - go mod download
      - go mod tidy
      - task: copy-framework-assets
        dir: '{{.USER_WORKING_DIR}}'
      - task: ast
        dir: '{{.USER_WORKING_DIR}}'
      - task: css
        dir: '{{.USER_WORKING_DIR}}'

  run:
    dir: '{{.USER_WORKING_DIR}}'
    desc: Run the project
    cmds:
      - task: setup
        dir: '{{.USER_WORKING_DIR}}'
      - go run .

  build:
    deps: [setup]
    dir: '{{.USER_WORKING_DIR}}'
    desc: Build the project
    cmds:
      - rm -rf ./dist
      - mkdir -p ./dist/assets/dist
      - cp -r ./assets/dist/* ./dist/assets/dist/
      - go build -o "./dist" .
      - echo "Build successful"

  copy-framework-assets:
    dir: '{{.USER_WORKING_DIR}}'
    desc: Copy framework assets
    cmds:
      - go run github.com/maddalax/htmgo/framework/tooling/copyassets@latest

  css:
    dir: '{{.USER_WORKING_DIR}}'
    desc: Generate CSS from source code
    generates:
      - '**/main.css'
    cmds:
      - chmod +x ./assets/css/tailwindcss
      - ./assets/css/tailwindcss -i ./assets/css/input.css -o ./assets/dist/main.css -c ./assets/css/tailwind.config.js

  go-watch:
    deps: [setup]
    dir: '{{.USER_WORKING_DIR}}'
    desc: Run the project and watch for changes
    cmds:
      - air -build.exclude_dir "dist"

  css-watch:
    dir: '{{.USER_WORKING_DIR}}'
    desc: Generate CSS from source code and watch for changes
    watch: true
    generates:
      - '**/main.css'
    sources:
      - '**/*.css'
      - '**/*.go'
    cmds:
      - task: css
        dir: '{{.USER_WORKING_DIR}}'

  ast:
    dir: '{{.USER_WORKING_DIR}}'
    desc: Generate AST from source code
    generates:
      - '**/generated.go'
    cmds:
      - go run github.com/maddalax/htmgo/framework/tooling/astgen@latest

  ast-watch:
    dir: '{{.USER_WORKING_DIR}}'
    desc: Generate AST from source code and watch for changes
    watch: true
    generates:
      - '**/generated.go'
    sources:
      - 'pages/**/*.go'
      - 'partials/**/*.go'
    cmds:
      - task: ast
        dir: '{{.USER_WORKING_DIR}}'